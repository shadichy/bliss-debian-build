name: Generate install.sfs

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker buildx create --use --name devuan-dev --buildkitd-flags '--allow-insecure-entitlement security.insecure'
          docker buildx build --builder devuan-dev -f ci/Dockerfile -t devuan --allow security.insecure --output type=tar,dest=install.tar .

      - name: Extract RootFS & generate install.sfs
        run: |
          # Export it to install
          mkdir install
          sudo tar -C install -psxv install.tar
          # Move install.sfs out
          mv install/install.sfs .
          # Clean up
          sudo rm -rf install install.tar

      - name: Set Vars
        id: vars
        run: |
          echo "arch=$(dpkg --print-architecture)" >> "$GITHUB_OUTPUT"

      - name: Upload install.sfs
        uses: actions/upload-artifact@v4
        with:
          name: install.sfs
          path: install.sfs

  release:
    name: Release
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download RootFS
        id: download-rootfs
        uses: actions/download-artifact@v4
        with:
          path: out
          pattern: 'install.sfs,initrd_lib.tar.gz,grub-rescue.iso,boot_hybrid.img'
          merge-multiple: true

      - name: List Files
        run: ls -R ${{ steps.download-rootfs.outputs.download-path }}

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.RELEASE_TOKEN }}"
          prerelease: false
          files: |
            ${{ steps.download-rootfs.outputs.download-path }}/*.tar.gz
